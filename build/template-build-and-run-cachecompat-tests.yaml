parameters:
  BuildPlatform: 'any cpu'
  BuildConfiguration: 'debug'
  BuildSolution: 'LibsAndSamples.sln'

steps:

# Bootstrap the build
- template: template-bootstrap-build.yaml

# Unit tests require .NET 3.x
- task: UseDotNet@2
  displayName: 'Use .Net Core SDK 3.x'
  inputs:
    version: 3.x
    
# Use the latest .NET SDK
- task: UseDotNet@2
  displayName: 'Use .Net Core sdk 5.x'
  inputs:
    version: 5.x

# Install keyvault secrets
- template: template-install-keyvault-secrets.yaml

#Build and restore test packages
- task: CmdLine@2
  displayName: 'Clear local NuGet cache'
  inputs:
    script: 'nuget locals all -clear'

- task: VSBuild@1
  displayName: 'NuGet restore ${{ parameters.BuildSolution }}'
  inputs:
    solution: ${{ parameters.BuildSolution }}
    msbuildArgs: '/t:restore'
    platform: ${{ parameters.BuildPlatform }}
    configuration: ${{ parameters.BuildConfiguration }}

- task: VSBuild@1
  displayName: 'Build solution ${{ parameters.BuildSolution }}'
  inputs:
    solution: ${{ parameters.BuildSolution }}
    msbuildArgs: '/p:RunCodeAnalysis=false'
    platform: ${{ parameters.BuildPlatform }}
    configuration: ${{ parameters.BuildConfiguration }}

# install python and run cache tests
- task: stevedower.python.PythonScript.PythonScript@1
  displayName: 'Update PIP'
  condition: and(succeeded(), eq(variables['RunTests'], 'true'))
  inputs:
    arguments: '-m pip install --upgrade pip'

- task: stevedower.python.PythonScript.PythonScript@1
  displayName: 'Install MSAL.Python PIP'
  condition: and(succeeded(), eq(variables['RunTests'], 'true'))
  inputs:
    arguments: '-m pip install msal'

- task: VSTest@2
  displayName: 'Run cache compat tests'
  condition: and(succeeded(), eq(variables['RunTests'], 'true'))
  inputs:
    testSelector: 'testAssemblies'
    testAssemblyVer2: '**\CacheCompat\CommonCache.Test.Unit\bin\**\CommonCache.Test.Unit.dll'
    searchFolder: '$(System.DefaultWorkingDirectory)'
    codeCoverageEnabled: true
    failOnMinTestsNotRun: true
    minimumExpectedTests: '1'